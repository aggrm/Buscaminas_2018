/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package codigo;

import java.awt.GridLayout;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.Random;

/**
 *
 * @author xp
 */
public class VentanaBuscaminas extends javax.swing.JFrame {

    int filas = 15; 
    int columnas = 20;
    
    
    Boton [][] arrayBotones = new Boton [filas][columnas];
    
    //Este metodo es un metodo para cada boton calcula el n√∫mero de minas que 
    //tiene alrededor
    private void cuentaMinas()
    {
       int minas = 0;
       for (int  i = 0 ; i < filas; i++)
       {
           for(int j = 0; j < columnas; j++)
           {
               if((i > 0) && (j > 0) && (i < filas - 1) && (j < columnas - 1))
               {
                   /*Sudoku cuadro
                        1   2   3
                        4   m   6
                        7   8   9
                   */
                   
                   minas += arrayBotones[i - 1][j - 1].getMina();               //1
                   minas += arrayBotones[i][j - 1].getMina();                   //4
                   minas += arrayBotones[i + 1][j - 1].getMina();               //7

                   minas += arrayBotones[i - 1][j].getMina();                   //2
                   minas += arrayBotones[i + 1][j].getMina();                   //7

                   minas += arrayBotones[i - 1][j + 1].getMina();               //3                   
                   minas += arrayBotones[i][j + 1].getMina();                   //6
                   minas += arrayBotones[i + 1][j + 1].getMina();               //9
               }
               if((j == 0) && (i == 0))
               {
                   minas += arrayBotones[i + 1][j].getMina();                   //7
                   
                   minas += arrayBotones[i][j + 1].getMina();                   //6
                   minas += arrayBotones[i + 1][j + 1].getMina();               //9 
               }
               if((j == 0))
               {
                   minas += arrayBotones[i - 1][j].getMina();                   //2
                   minas += arrayBotones[i + 1][j].getMina();                   //7

                   minas += arrayBotones[i - 1][j + 1].getMina();               //3                   
                   minas += arrayBotones[i][j + 1].getMina();                   //6
                   minas += arrayBotones[i + 1][j + 1].getMina();               //9
               }
               arrayBotones[i][j].setNumeroMinasAlrededor(minas);
               
               //TODO comentar la siguiente parte para que no aparezca los numeros al iniciar la partida
               
               if(arrayBotones[i][j].getMina() == 0)
               {
                   arrayBotones[i][j].setText(String.valueOf(minas));
               }
               minas = 0;
               
           }
       }
    }
    /**
     * Creates new form VentanaBuscaminas
     */
    public VentanaBuscaminas() {
        initComponents();
        setSize(800, 600);
        setLocationRelativeTo(null);
        getContentPane().setLayout(new GridLayout(filas, columnas));
        
        for(int i = 0; i < filas; i++)
        {
            for( int j = 0 ; j < columnas; j++)
            {
                Boton boton = new Boton(i, j);
                getContentPane().add(boton);
                arrayBotones[i][j] = boton;
                boton.addMouseListener(new MouseAdapter() 
                {
                    @Override
                    public void mousePressed(MouseEvent evt)
                    {
                        botonPulsado(evt);
                    }
                });
            }
        }        
        ponMinas(30);
        cuentaMinas();
    }

   private void botonPulsado(MouseEvent e) 
   {
       Boton miBoton = (Boton) e.getComponent();
       if(e.getButton() == MouseEvent.BUTTON3)
       {
         miBoton.setText("?");
       }
   }
   
   private void ponMinas (int numeroMinas)
   {
       Random r = new Random();
       for(int i = 0; i < numeroMinas; i++)
       {
           int f = r.nextInt(filas);
           int c = r.nextInt(columnas);
           
           //TODO Hacer una version que chequee si en la casilla  seleccionada 
           //ya hay una mina, porque en este caso tiene que buscar otra
           arrayBotones[f][c].setMina(1);
           arrayBotones[f][c].setText("m");
       }
   }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaBuscaminas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaBuscaminas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaBuscaminas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaBuscaminas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaBuscaminas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
